class Solution {
public:
    int M=1e9+7;
    int numberOfGoodPartitions(vector<int>& nums) {
        int n=nums.size();
        //Here we need last indx of that element so 
        unordered_map<int,int>mp;
        //for the lastElement Index'
        int result=1;
        for(int i=0;i<n;i++){
        mp[nums[i]]=i;
        }
        int i=0,j=max(0,mp[nums[0]]);
        while(i<n){
            if(i>j){//means pahle partition mil gya 
                result=(result*2)%M;
            }
            j=max(j,mp[nums[i]]);
            i++;
        }
        return result;
    }
};
